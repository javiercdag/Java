/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica1_sesion4;

import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;

public class PanelBotones extends javax.swing.JPanel implements Runnable {

    /**
     * Creates new form PanelBotones
     */
    SCACV_Mumavi cliente;
    EstadoMotor estadoActual;
    Boolean hayCombustible;
    Boolean crucero;
    
    public PanelBotones() {
        initComponents();
        botonAcelerar.setText("ACELERAR");
        botonFrenar.setText("FRENAR");
        botonEncender.setText("ENCENDER");
        botonMantener.setText("MANTENER");
        botonReiniciar.setText("REINICIAR");
        estado.setText("APAGADO");
        estadoActual = EstadoMotor.APAGADO;
        hayCombustible = true;
        crucero = false;
        
        Thread t1 = new Thread(this);
        t1.start();
    }
    
    void setCliente(SCACV_Mumavi cliente){
        this.cliente = cliente;
    }
    
    @Override
    public void run(){
        while (true){
            if (botonEncender.isSelected() && hayCombustible){
                botonEncender.setForeground(Color.red);
                estadoActual = EstadoMotor.ENCENDIDO;
                estado.setText("ENCENDIDO");
                
                botonEncender.setText("APAGAR");
                botonAcelerar.setText("ACELERAR");
                botonFrenar.setText("FRENAR");
                botonMantener.setText("MANTENER");
                botonAcelerar.setForeground(Color.white);
                botonFrenar.setForeground(Color.white);
                botonMantener.setForeground(Color.white);

                if (botonAcelerar.isSelected()){
                    
                    botonAcelerar.setForeground(Color.red);
                    estadoActual = EstadoMotor.ACELERANDO;
                    estado.setText("ACELERANDO");
                    botonAcelerar.setText("Soltar acelerador");
                    botonFrenar.setSelected(false);
                    
                    if (botonMantener.isSelected()){
                        botonAcelerar.setSelected(false);
                        botonAcelerar.setForeground(Color.white);
                        botonAcelerar.setText("ACELERAR");
                        crucero = true;
                    } else{
                        crucero = false;
                    }
                }
                else if  (botonFrenar.isSelected()){
                    botonFrenar.setForeground(Color.red);
                    estadoActual = EstadoMotor.FRENANDO;
                    estado.setText("FRENANDO");
                    botonFrenar.setText("Soltar freno");
                    botonAcelerar.setSelected(false);
                    
                    crucero = false;
                    botonMantener.setForeground(Color.white);
                    botonMantener.setSelected(false);
                } else if (!botonMantener.isSelected()){
                    crucero = false;
                }
                
                if (crucero){
                    botonMantener.setForeground(Color.red);
                    estado.setText("MANTENIENDO");
                    estadoActual = EstadoMotor.MANTENIENDO;
                } else{
                    botonMantener.setSelected(false);
                }
            }else{
                botonEncender.setForeground(Color.green);
                botonAcelerar.setForeground(Color.white);
                botonFrenar.setForeground(Color.white);
                botonMantener.setForeground(Color.white);
                estadoActual = EstadoMotor.APAGADO;
                estado.setText("APAGADO");
                botonEncender.setText("ENCENDER");
                botonAcelerar.setText("ACELERAR");
                botonFrenar.setText("FRENAR");
                botonMantener.setText("MANTENER");
                botonAcelerar.setSelected(false);
                botonFrenar.setSelected(false);
                botonMantener.setSelected(false);
            }

            if (cliente != null)
                hayCombustible = this.cliente.ejecutar(estadoActual);
            
            this.repaint();
            this.revalidate();
            
            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {
                Logger.getLogger(PanelBotones.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonAcelerar = new javax.swing.JToggleButton();
        botonEncender = new javax.swing.JToggleButton();
        botonFrenar = new javax.swing.JToggleButton();
        estado = new javax.swing.JLabel();
        botonMantener = new javax.swing.JToggleButton();
        botonReiniciar = new javax.swing.JButton();

        botonAcelerar.setBackground(new java.awt.Color(1, 1, 1));
        botonAcelerar.setForeground(new java.awt.Color(254, 254, 254));
        botonAcelerar.setText("jToggleButton1");

        botonEncender.setBackground(new java.awt.Color(1, 1, 1));
        botonEncender.setForeground(new java.awt.Color(254, 254, 254));
        botonEncender.setText("jToggleButton2");
        botonEncender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEncenderActionPerformed(evt);
            }
        });

        botonFrenar.setBackground(new java.awt.Color(1, 1, 1));
        botonFrenar.setForeground(new java.awt.Color(254, 254, 254));
        botonFrenar.setText("jToggleButton3");

        estado.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        estado.setText("jLabel1");

        botonMantener.setBackground(new java.awt.Color(1, 1, 1));
        botonMantener.setForeground(new java.awt.Color(254, 254, 254));
        botonMantener.setText("jToggleButton1");

        botonReiniciar.setBackground(new java.awt.Color(1, 1, 1));
        botonReiniciar.setForeground(new java.awt.Color(254, 254, 254));
        botonReiniciar.setText("jButton1");
        botonReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonReiniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonFrenar)
                    .addComponent(botonAcelerar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(botonReiniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonMantener)
                            .addComponent(botonEncender))
                        .addGap(93, 93, 93))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(botonEncender)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonMantener)
                    .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonReiniciar)
                .addGap(30, 30, 30))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(botonAcelerar)
                .addGap(37, 37, 37)
                .addComponent(botonFrenar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botonEncenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEncenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonEncenderActionPerformed

    private void botonReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonReiniciarActionPerformed
        
        if (estadoActual == EstadoMotor.ENCENDIDO){
            estadoActual = EstadoMotor.REINICIANDO;
            hayCombustible = this.cliente.ejecutar(estadoActual);
            estadoActual = EstadoMotor.MANTENIENDO; 
            botonAcelerar.setSelected(true);
            botonMantener.setSelected(true); 
        }
    }//GEN-LAST:event_botonReiniciarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton botonAcelerar;
    private javax.swing.JToggleButton botonEncender;
    private javax.swing.JToggleButton botonFrenar;
    private javax.swing.JToggleButton botonMantener;
    private javax.swing.JButton botonReiniciar;
    private javax.swing.JLabel estado;
    // End of variables declaration//GEN-END:variables
}
